/*
 * Relationship_TrackingUserAndProducts.c
 *
 *  Created on: 14 may 2022
 *      Author: gonza
 */

#include "Relationship_TrackingUserAndProducts.h"

int Relationship_newTracking(Tracking trackingList, int trackingSize,
		User userList[], int userSize, Product productList[], int productSize) {
	int r = -1;
	if (userList != NULL && productList != NULL && userList != NULL
			&& userSize > 0 && productSize > 0 && trackingSize > 0) {

	}
	return r;
}

int Relationship_BuyProductAndNewTracking(Product productList[], int size, Tracking trackingList[], int trackingSize, int userId) {
	int r = -1;
	int indexBuy;
	int stockToBuy;
	float totalPrice;
	int ID = 0;

	if (productList != NULL) {
		if (size > 0) {
			Product_printProducts(productList, size);
			if (utn_getNumero("Ingrese el ID del producto a comprar:\n",
					"Hubo un error\n", 0, 3, &ID) == 0) {
				indexBuy = Product_SearchIndexPerId(productList, size, ID);
				if (indexBuy == -1) {
					printMessage("No se encontro el ID en la lista.\n", 1);
					return r;
				} else {
					printMessage(
							"El producto que desea comprar es el siguiente:\n",
							1);
					Product_printOne(productList[indexBuy]);
					utn_getNumeroWithMax(
							"Ingrese la cantidad de elementos que desea comprar.\n",
							"Ha habido un error, vuelva a intentarlo.\n", 0,
							productList[indexBuy].stock, 3, &stockToBuy);
					totalPrice = stockToBuy * productList[indexBuy].price;
					printf("Precio final: %.2f", totalPrice);
					if (confirmation(
							"¿Esta seguro que quiere comprar?(1-Si/Otro numero-No)\n",
							"Ha habido un error en relacion al numero ingresado. Intentelo nuevamente.\n")
							== 1) {
						productList[indexBuy].stock =
								productList[indexBuy].stock - stockToBuy;
						if (productList[indexBuy].stock == 0) {
							productList[indexBuy].isEmpty = NOSTOCK;
						}

						//Alta de tracking
						Relationship_newTracking(*trackingList, trackingSize, userId);
						r = 0;
					} else {
						r = -2;
					}
				}
			}

		}
	}
	return r;
}
